#!/usr/bin/env python3

import os
import time
import mutagen
import discogs_client
import Levenshtein

if len(os.sys.argv) < 2:
	print("usage: autotaggenres <file>")
else:
	d = discogs_client.Client('AutotagGenres/0.7', user_token='WDqHGzEcSurpwRWbgZPYRcMXDhutwPaVTXjArVZG')
	
	f = 0
	while f < len(os.sys.argv)-1:
		try:
			audio = mutagen.File(os.sys.argv[f+1])
			try:
				album = audio["album"][0]
				albumartist = audio["albumartist"][0]
				title = audio["title"][0]
			except:
				audio = mutagen.easyid3.EasyID3(os.sys.argv[f+1])
				album = str(audio["album"])
				albumartist = str(audio["albumartist"])
				title = str(audio["title"])
			results = d.search(album + ' ' + albumartist, type='release')
	
			score = 0.0
			max_score = 0.0
			best_match = ""
			found = False
			i = 0
			while i < min(50,len(results)):
				try:
					score = Levenshtein.ratio(results[i].artists[0].name.lower(), albumartist.lower())
					if score > max_score:
						max_score = score
						best_match = results[i].artists[0].name
					if score >= 0.7:
						found = True
						break;
					i+=1
				except:
					print("Waiting 5 seconds...")
					time.sleep(5)
			
			max_score *= 100
			max_score_str = str(round(max_score)) + "%"
	
			if not found:
				msg="No match for: " + title + " - " + albumartist + " (" + album + ")\nBest match: (" + max_score_str + ") " + best_match
				print(msg)
				os.system('notify-send "Discogs genre autotag" "' + msg + '"')
			else:
				try:
					release = results[i].master.main_release
				except:
					release = results[i]
	
				genres = release.genres
				styles = release.styles
	
				genreString = ""
				if type(genres) is list:
					for genre in genres:
						genreString += genre
						genreString += "; "
				if type(styles) is list:
					for style in styles:
						genreString += style
						genreString += "; "
	
				if genreString[-2:] == "; ":
					genreString = genreString[:-2]
	
	
				audio["genre"] = genreString
				try:
					audio["year"] = str(release.year)
				except:
					audio["date"] = str(release.year)
				audio.save()
	
				msg=audio["title"][0] + " - " + audio["albumartist"][0] + " (" + audio["album"][0] + "): " + genreString + "\nMatch: (" + max_score_str + ") " + best_match 
				print(msg)
				os.system('notify-send "Discogs genre autotag" "' + msg + '"')
			f+=1
		except:
			print("Waiting 6 seconds...")
			time.sleep(6)
			